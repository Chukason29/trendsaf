openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
  description: API documentation converted from JSON structure.

servers:
  - url: http://46.101.27.66:5080
  - url: http://127.0.0.1:5000

paths:
  /signup/registration:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  example: "Chuwuebuka"
                lastname:
                  type: string
                  example: "Alaegbu"
                email:
                  type: string
                  example: "victoralaegbu@gmail.com"
                password:
                  type: string
                  example: "12345"
      responses:
        '200':
          description: Registration successful.

  /auth/login:
    post:
      summary: User login
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "victoralaegbu@gmail.com"
                password:
                  type: string
                  example: "12345"
      responses:
        '200':
          description: Login successful.

  /auth/password_reset_request:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "ebuse4jesus@yahoo.com"
      responses:
        '200':
          description: Password reset request sent.

  /auth/password_reset/{token}:
    post:
      summary: Reset password
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "123456789"
      responses:
        '200':
          description: Password reset successful.

  /auth/auth_access:
    post:
      summary: Auth access
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Access granted.

  /auth/confirmation:
    post:
      summary: User confirmation
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                  example: "Tolu and sons"
                company_type:
                  type: string
                  example: "Suppliers"
                company_size:
                  type: string
                  example: "A"
                start_year:
                  type: string
                  example: "1984"
                annual_revenue:
                  type: string
                  example: "C"
                company_role:
                  type: string
                  example: "Z"
                phone:
                  type: string
                  example: "+234907876356"
                province:
                  type: string
                  example: "Ngalo"
                country:
                  type: string
                  example: "Rwanda"
      responses:
        '200':
          description: Confirmation successful.

  /auth/logout:
    post:
      summary: User logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful.

  /admin/crops:
    post:
      summary: Create a crop
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                crop_name:
                  type: string
                  example: "Maize"
      responses:
        '200':
          description: Crop created.

  /admin/countries:
    post:
      summary: Add a country
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_name:
                  type: string
                  example: "United States of America"
                country_code:
                  type: string
                  example: "US"
      responses:
        '200':
          description: Country added.

  /admin/countries/regions:
    post:
      summary: Add a region to a country
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_id:
                  type: integer
                  example: 4
                country_name:
                  type: string
                  example: "United States of America"
                region_name:
                  type: string
                  example: "Arizona"
      responses:
        '200':
          description: Region added to country.

  /admin/crops/categories:
    post:
      summary: Add a crop category
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                crop_variety:
                  type: string
                  example: "Pop Corn"
                crop_code:
                  type: string
                  example: "YCX244"
                crop_id:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Crop category added.

  /admin/crops/process_state:
    post:
      summary: Add crop process state
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                crop_id:
                  type: integer
                  example: 2
                crop_category_id:
                  type: integer
                  example: 1
                process_state:
                  type: string
                  example: "Roasted"
      responses:
        '200':
          description: Crop process state added.

  /general_routes/crops:
    get:
      summary: Get list of crops
      responses:
        '200':
          description: List of crops.

  /general_routes/countries:
    get:
      summary: Get list of countries
      responses:
        '200':
          description: List of countries.

  /general_routes/regions:
    get:
      summary: Get list of regions by country
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_id:
                  type: integer
                  example: 2
                country_name:
                  type: string
                  example: "Nigeria"
      responses:
        '200':
          description: List of regions by country.

  /general_routes/cropcategories:
    get:
      summary: Get crop categories by crop ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                crop_id:
                  type: integer
                  example: 2
      responses:
        '200':
          description: List of crop categories by crop ID.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
