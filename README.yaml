swagger: "2.0"
info:
  description: "This is the API documentation for User Signup, Authentication, and Account Management."
  version: "1.0.0"
  title: "User Management API"
  termsOfService: "http://example.com/terms/"
  contact:
    email: "support@trendsaf.com"
host: "api.trendsaf.com"
basePath: "/v1"
schemes:
  - "http"
  - "https"
paths:
  /signup/registration:
    post:
      summary: "Register new users"
      description: "Endpoint for registering a new user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "user"
          description: "New user details"
          required: true
          schema:
            type: "object"
            required:
              - "firstname"
              - "lastname"
              - "email"
              - "password"
            properties:
              firstname:
                type: "string"
                example: "Jamo"
              lastname:
                type: "string"
                example: "Aphrodisu"
              email:
                type: "string"
                example: "abraham@trendsaf.com"
              password:
                type: "string"
                example: "12345"
      responses:
        200:
          description: "Successful registration"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
              is_confirmed:
                type: "boolean"
              is_verified:
                type: "boolean"
              message:
                type: "string"
              status:
                type: "integer"
        422:
          description: "Missing parameter"
          schema:
            type: "object"
            properties:
              error:
                type: "integer"
              message:
                type: "string"
              status:
                type: "boolean"
        400:
          description: "Invalid email or email already exists"
          schema:
            type: "object"
            properties:
              exists:
                type: "boolean"
              is_verified:
                type: "boolean"
              message:
                type: "string"

  /signup/link_resend:
    post:
      summary: "Resend verification link"
      description: "Endpoint for resending verification link to users"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "email"
          description: "Email to resend verification link"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
                example: "aphrodis@gmail.com"
      responses:
        200:
          description: "Verification link sent"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
              message:
                type: "string"
        405:
          description: "Invalid request method"
          schema:
            type: "object"
            properties:
              error:
                type: "integer"
              message:
                type: "string"
              status:
                type: "boolean"
        400:
          description: "Email not registered"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
              message:
                type: "string"

  /auth/confirmation:
    post:
      summary: "Confirm user profile"
      description: "Endpoint for confirming user profile"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "Authorization"
          description: "Bearer token for authorization"
          required: true
          type: "string"
        - in: "header"
          name: "X-CSRF-TOKEN"
          description: "CSRF token"
          required: true
          type: "string"
        - in: "body"
          name: "company_profile"
          description: "User's company profile"
          required: true
          schema:
            type: "object"
            properties:
              company_name:
                type: "string"
              company_type:
                type: "string"
              company_size:
                type: "string"
              start_year:
                type: "string"
              annual_revenue:
                type: "string"
              company_role:
                type: "string"
              phone:
                type: "string"
              province:
                type: "string"
              country:
                type: "string"
      responses:
        200:
          description: "Profile confirmed successfully"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
              message:
                type: "string"
        400:
          description: "Invalid request"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
              message:
                type: "string"

  /auth/login:
    post:
      summary: "Login user"
      description: "Endpoint for user authentication"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "login"
          description: "User login credentials"
          required: true
          schema:
            type: "object"
            required:
              - "email"
              - "password"
            properties:
              email:
                type: "string"
                example: "apercu@trendsaf.com"
              password:
                type: "string"
                example: "12345"
      responses:
        200:
          description: "Successful authentication"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
              is_verified:
                type: "boolean"
              is_confirmed:
                type: "boolean"
              message:
                type: "string"
        401:
          description: "Wrong email or password"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
              message:
                type: "string"

  /auth/password_reset_request:
    post:
      summary: "Request password reset"
      description: "Endpoint for requesting password reset"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "email"
          description: "Email for password reset"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
                example: "nhamo@trendsaf.co"
      responses:
        200:
          description: "Password reset link sent"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
              message:
                type: "string"
        400:
          description: "User does not exist"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
              message:
                type: "string"

  /auth/password_reset/{token}:
    post:
      summary: "Reset password"
      description: "Endpoint for resetting user password"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "token"
          required: true
          type: "string"
          description: "Password reset token"
        - in: "body"
          name: "password"
          description: "New password"
          required: true
          schema:
            type: "object"
            properties:
              password:
                type: "string"
                example: "123456789"
      responses:
        200:
          description: "Password changed successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
              status:
                type: "boolean"
        400:
          description: "Password change failed"
          schema:
            type: "object"
            properties:
              status:
                type: "boolean"
              message:
                type: "string"
